Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/MiningLaserHeavy"
	IconNameKey = "Parts/MiningLaserHeavyIcon"
	ID = cosmoteer.mining_laser_heavy // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroups = ["WeaponsEnergy", "Utilities"]
	DescriptionKey = "Parts/MiningLaserHeavyDesc"
	Resources
	[
		[steel, 200]
		[tristeel, 45]
		[coil2, 45]
		[diamond, 2]
	]
	Size = [4, 5]
	MaxHealth = 20000
	SelectionPriority = 1
	TypeCategories = [weapon, uses_power, is_crewed, mining]
	ReceivableBuffs : ^/0/ReceivableBuffs [ElectronBuff]
	ProhibitedBy : ^/0/ProhibitedBy [tall]
	ProhibitRects
	[
		[tall, [-2, -2, 8, 2]]
		[tall, [-2, 0, 2, 5]]
		[tall, [4, 0, 2, 5]]
	]
	AllowedDoorLocations
	[
		[-1, 1]
		[-1, 2]
		[-1, 4]
		[0, 5]
		[1, 5]
		[2, 5]
		[3, 5]
		[4, 4]
		[4, 2]
		[4, 1]
		[1, -1]
		[2, -1]
	]
	ForceManhattanPathInPart = true
	BlockedTravelCellDirections
	[
		{
			Key = [1, 0]
			Value = [Down]
		}
		{
			Key = [2, 0]
			Value = [Down]
		}
		{
			Key = [0, 1]
			Value = [Right]
		}
		{
			Key = [3, 1]
			Value = [Left]
		}
		{
			Key = [1, 1]
			Value = [Up, Left, Right]
		}
		{
			Key = [2, 1]
			Value = [Up, Left, Right]
		}
		{
			Key = [1, 3]
			Value = [Down, Left, Right]
		}
		{
			Key = [2, 3]
			Value = [Down, Left, Right]
		}
		{
			Key = [0, 3]
			Value = [Right]
		}
		{
			Key = [3, 3]
			Value = [Left]
		}
		{
			Key = [1, 4]
			Value = [Up]
		}
		{
			Key = [2, 4]
			Value = [Up]
		}
	]
	EditorIcon = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/EditorIcon
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 8
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 20000 // TODO
			ReceiveResourceMediaEffects = &<./Data/common_effects/common_effects.rules>/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &<./Data/ships/base_ship.rules>/DefaultSalvagePriority
			ResupplyThreshold = 5000
			OperationalToggle = PowerToggle
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		Graphics = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/Graphics

		Turret
		{
			Type = TurretWeapon
			Location = [2, 122/64]// Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			FiringArc = 360d
			RotateSpeed = 20d
			FireThresholdAngle = 10d
			AIFirepowerRating = 1500
			CanSalvage = true
			IncludeInFirepowerEstimation = false
			AlwaysShowCoverage = true
			Emitter = BeamEmitterBase // Doesn't actually fire; only used for targeting.
			AutoTargetCrewSafetyDist = 8
			IgnoreFriendlyShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true

			AutoTargets
			[
				{
					TargetType = Salvage
					Toggle = FireModeToggle
				}
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &<./Data/gui/game/indicators/indicators.rules>/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &<./Data/gui/game/indicators/indicators.rules>/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		TurretCollider = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/TurretCollider

		BeamEmitterBase : &<./Data/shots/mining_beam_small/mining_beam_small.rules>
		{
			Type = BeamEmitter
			ChainedTo = Turret
			FireTrigger // none, but field is required
			GetTargetFrom = Turret
			Location = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/BaseEmitter/Location
			OperationalToggle = IsOperational
			Duration = .4
			ResourceStorage = BatteryStorage
			ResourcesUsed = 60
			MinResourcesUsed = 1
			Width = abs((&../BeamEmitterLeft/Location/1) - (&../BeamEmitterRight/Location/1)) + (&^/0/Width) / 1.5
		}
		LeftOscillator
		{
			Type = Oscillator
			ChainedTo = Turret
			OperationalToggle = BeamEmitterLeft
			Location = [59/64, -14/64]
			Angle = -0.3333333333d
			Interval = 4.0
			ResetWhenOperational = true
		}
		RightOscillator : LeftOscillator
		{
			OperationalToggle = BeamEmitterRight
			Location = [59/64, 14/64]
			Angle = -(&../LeftOscillator/Angle)
		}
		BeamEmitterLeft : BeamEmitterBase
		{
			ChainedTo = LeftOscillator
			FireTrigger = Turret
			Location = [0, -14/64]
			Width = &<./Data/shots/mining_beam_small/mining_beam_small.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}
		BeamEmitterRight : BeamEmitterBase
		{
			ChainedTo = RightOscillator
			FireTrigger = Turret
			Location = [0, 14/64]
			Width = &<./Data/shots/mining_beam_small/mining_beam_small.rules>/Width // BeamEmitterBase overrides width for targeting purposes.
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [89/64, 110/64]
			Rotation = 0d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [166/64, 110/64]
			Rotation = 0d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [67/64, 189/64]
			Rotation = 150d
		}
		CrewLocation4
		{
			Type = CrewLocation
			Location = [189/64, 189/64]
			Rotation = -150d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 4
			DefaultPriority = &<./Data/ships/base_ship.rules>/DefaultSalvagePriority
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation1/Location
				&../../CrewLocation2/Location
				&../../CrewLocation3/Location
				&../../CrewLocation4/Location
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
				CrewLocation3
				CrewLocation4
			]
		}

		TurretGraphics = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/TurretGraphics

		TurretGraphics2 = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/TurretGraphics2

		BatterySprites : &<./Data/ships/terran/mining_laser_small/mining_laser_small.rules>/Part/Components/BatterySprites
		{
			Location = [98/64, 214/64]  // guess based on cannon_deck
		}
		
		OperationEffects
		{
			Type = ToggleEffects
			Location = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/OperationEffects/Location
			Toggle = IsOperational
			ToggledOnMediaEffects = &<./Data/common_effects/common_effects.rules>/PowerOn
			ToggledOffMediaEffects = &<./Data/common_effects/common_effects.rules>/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &<./Data/common_effects/common_effects.rules>/MedPartDestroyed
			Location = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/DestroyedEffects/Location
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/Indicators/Location
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &<./Data/gui/game/indicators/indicators.rules>/PowerOff
						Size = [1, 1]
					}
					HidesIndicators = [1,2]
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					Delay = &~/Part/Components/Turret/FireInterval
					AtlasSprite
					{
						File = &<./Data/gui/game/indicators/indicators.rules>/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &<./Data/gui/game/indicators/indicators.rules>/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints = &<./Data/ships/terran/cannon_deck/cannon_deck.rules>/Part/Components/Blueprints
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerUsageContinuous
		RecCrew = (&CrewRequired) + (&RecPower) * 8
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/MiningBeam"
			Stats
			{
				DamagePerShot = (&~/Part/Components/BeamEmitterBase/HitOperational/HitEffects/0/Damage/BaseValue) * 4
				HitInterval = &~/Part/Components/BeamEmitterBase/HitInterval
				DamageContinuousEnemies = (&DamagePerShot) / (&HitInterval)
				DamagePerShotJunk = (&~/Part/Components/BeamEmitterBase/HitOperational/HitEffects/1/Damage/BaseValue) * 4
				DamageContinuousJunk = (&DamagePerShotJunk) / (&HitInterval)
				DamagePerShotAsteroids = (&~/Part/Components/BeamEmitterBase/HitOperational/HitEffects/3/Damage/BaseValue) * 4
				DamageContinuousAsteroids = (&DamagePerShotAsteroids) / (&HitInterval)
				Range = &~/Part/Components/BeamEmitterBase/Range
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = Infinity
				PowerPerShot = (&~/Part/Components/BeamEmitterBase/ResourcesUsed) * 4 / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&~/Part/Components/Turret/FireInterval)
			}
		}
	]
}